.0      // PROGRAM INFO: Prints out "Hello World" in ASCII art
5       // Load char using Y
500
7       // Store char in memory slot
200
22      // Jump past exit if not 0
7
50      // Exit
1       // Reset AC to 1
1
11      // Add 1 to AC
16      // AC to Y
5       // Load count using Y
500
14      // Copy count to X
23      // Call repeat char function
100
1       // Set AC to 1
1
11      // Add 1 to AC
16      // AC to Y
20      // Jump to start
0

.100    // Repeat Char Function (prints out a single character X number of times)
17      // Y to AC
27      // Push AC to stack
1       // Set AC to 1
1
16      // AC to Y
15      // Load iterator from X to AC (also loop start)
22      // Jump past return if not 0
111
28      // Pop from stack
16      // AC to Y
24      // Return
13      // Subtract Y from X (minus 1)
14      // AC to X
2       // Load char from memory
200
9       // Print char
2
20      // Jump to start
105


.200    // Empty slot to store char
0


.500    // Line Data
32
1
95
1
32
3
95
1
32
6
95
1
32
1
95
1
32
9
95
1
32
4
95
1
32
12
95
1
32
5
95
1
32
1
10
1
124
1
32
1
124
1
32
1
124
1
32
1
124
1
32
4
124
1
32
1
124
1
32
1
124
1
32
7
124
1
32
1
124
1
32
2
124
1
32
1
124
1
32
10
124
1
32
1
124
1
32
3
124
1
32
1
124
1
10
1
124
1
32
1
124
1
95
1
124
1
32
1
124
1
32
1
95
3
124
1
32
1
124
1
32
1
124
1
32
1
95
3
32
3
124
1
32
1
124
1
32
2
124
1
32
1
124
1
32
1
95
3
32
2
95
1
32
1
95
2
124
1
32
1
124
1
32
1
95
2
124
1
32
1
124
1
10
1
124
1
32
2
95
1
32
2
124
1
47
1
32
1
95
1
32
1
92
1
32
1
124
1
32
1
124
1
47
1
32
1
95
1
32
1
92
1
32
2
124
1
32
1
124
1
47
1
92
1
124
1
32
1
124
1
47
1
32
1
95
1
32
1
92
1
124
1
32
1
39
1
95
2
124
1
32
1
124
1
47
1
32
1
95
1
96
1
32
1
124
1
10
1
124
1
32
1
124
1
32
1
124
1
32
1
124
1
32
2
95
2
47
1
32
1
124
1
32
1
124
1
32
1
40
1
95
1
41
1
32
1
124
1
32
1
92
1
32
2
47
1
92
1
32
2
47
1
32
1
40
1
95
1
41
1
32
1
124
1
32
1
124
1
32
2
124
1
32
1
124
1
32
1
40
1
95
1
124
1
32
1
124
1
10
1
92
1
95
1
124
1
32
1
124
1
95
1
47
1
92
1
95
3
124
1
95
1
124
1
95
1
124
1
92
1
95
3
47
1
32
3
92
1
47
1
32
2
92
1
47
1
32
1
92
1
95
3
47
1
124
1
95
1
124
1
32
2
124
1
95
1
124
1
92
1
95
2
44
1
95
1
124
1
10
1
0       // NULL Char

.1000
30
